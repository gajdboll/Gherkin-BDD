<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="LIE-CZ9NTC2" name="TestRunners.LoginRunnerTestNG" tests="4" failures="0" timestamp="21 May 2021 09:35:31 GMT" time="0.758" errors="4">
  <testcase name="runScenario" time="0.189" classname="TestRunners.LoginRunnerTestNG">
    <error type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:32)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase name="runScenario" time="0.184" classname="TestRunners.LoginRunnerTestNG">
    <error type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:32)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase name="runScenario" time="0.185" classname="TestRunners.LoginRunnerTestNG">
    <error type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:32)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase name="runScenario" time="0.200" classname="TestRunners.LoginRunnerTestNG">
    <error type="io.cucumber.java.InvalidMethodSignatureException" message="A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)

">
      <![CDATA[io.cucumber.java.InvalidMethodSignatureException: A method annotated with Before, After, BeforeStep or AfterStep must have one of these signatures:
 * public void before_or_after(io.cucumber.java.Scenario scenario)
 * public void before_or_after()
at stepDefininitions.LoginSteps.Beginning(cucumber.api.Scenario)


at io.cucumber.java.InvalidMethodSignatureException$InvalidMethodSignatureExceptionBuilder.build(InvalidMethodSignatureException.java:52)
at io.cucumber.java.JavaHookDefinition.createInvalidSignatureException(JavaHookDefinition.java:47)
at io.cucumber.java.JavaHookDefinition.requireValidMethod(JavaHookDefinition.java:32)
at io.cucumber.java.JavaHookDefinition.<init>(JavaHookDefinition.java:18)
at io.cucumber.java.GlueAdaptor.addDefinition(GlueAdaptor.java:27)
at io.cucumber.java.JavaBackend.lambda$loadGlue$1(JavaBackend.java:42)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:49)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:40)
at io.cucumber.java.MethodScanner.scan(MethodScanner.java:25)
at io.cucumber.java.JavaBackend.lambda$loadGlue$2(JavaBackend.java:40)
at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.ReferencePipeline$Head.forEach(Unknown Source)
at java.util.stream.ReferencePipeline$7$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.forEach(Unknown Source)
at io.cucumber.java.JavaBackend.loadGlue(JavaBackend.java:40)
at io.cucumber.core.runner.Runner.<init>(Runner.java:52)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:51)
at java.lang.ThreadLocal$SuppliedThreadLocal.initialValue(Unknown Source)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:43)
at io.cucumber.core.runtime.CucumberExecutionContext.getRunner(CucumberExecutionContext.java:128)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:115)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- runScenario -->
</testsuite> <!-- TestRunners.LoginRunnerTestNG -->
